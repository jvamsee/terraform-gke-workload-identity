
Thulasi@DESKTOP-63GEKPP MINGW64 ~/Desktop/GCP/terraform-gke-workload/workload-identity
$ terraform init
Initializing modules...

Initializing the backend...

Initializing provider plugins...

The following providers do not have any version constraints in configuration,
so the latest version was installed.

To prevent automatic upgrades to new major versions that may contain breaking
changes, it is recommended to add version = "..." constraints to the
corresponding provider blocks in configuration, with the constraint strings
suggested below.

* provider.google: version = "~> 3.27"
* provider.null: version = "~> 2.1"
* provider.random: version = "~> 2.2"

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.

Thulasi@DESKTOP-63GEKPP MINGW64 ~/Desktop/GCP/terraform-gke-workload/workload-identity
$ terraform plan --out wi.plan
var.ip_range_pods
  The secondary ip range to use for pods

  Enter a value:

var.ip_range_services
  The secondary ip range to use for pods

  Enter a value:

var.network
  The VPC network to host the cluster in

  Enter a value:

var.subnetwork
  The subnetwork to host the cluster in

  Enter a value:

Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.

module.gke.data.google_container_engine_versions.region: Refreshing state...
data.google_client_config.default: Refreshing state...
module.gke.data.google_compute_zones.available: Refreshing state...
module.gke.data.google_client_config.default: Refreshing state...
module.gke.data.google_container_engine_versions.zone: Refreshing state...

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.gke.google_container_cluster.primary will be created
  + resource "google_container_cluster" "primary" {
      + additional_zones            = (known after apply)
      + cluster_ipv4_cidr           = (known after apply)
      + default_max_pods_per_node   = 110
      + enable_binary_authorization = false
      + enable_intranode_visibility = false
      + enable_kubernetes_alpha     = false
      + enable_legacy_abac          = false
      + enable_shielded_nodes       = true
      + enable_tpu                  = false
      + endpoint                    = (known after apply)
      + id                          = (known after apply)
      + instance_group_urls         = (known after apply)
      + label_fingerprint           = (known after apply)
      + location                    = "europe-west2"
      + logging_service             = "logging.googleapis.com/kubernetes"
      + master_version              = (known after apply)
      + min_master_version          = "1.16.9-gke.6"
      + monitoring_service          = "monitoring.googleapis.com/kubernetes"
      + name                        = "my-demo-cluster"
      + network                     = "projects/kube-project-279210/global/networks/"
      + node_locations              = (known after apply)
      + node_version                = (known after apply)
      + operation                   = (known after apply)
      + project                     = "kube-project-279210"
      + region                      = (known after apply)
      + remove_default_node_pool    = true
      + services_ipv4_cidr          = (known after apply)
      + subnetwork                  = "projects/kube-project-279210/regions/europe-west2/subnetworks/"
      + tpu_ipv4_cidr_block         = (known after apply)
      + zone                        = (known after apply)

      + addons_config {
          + cloudrun_config {
              + disabled = (known after apply)
            }

          + config_connector_config {
              + enabled = false
            }

          + dns_cache_config {
              + enabled = false
            }

          + gce_persistent_disk_csi_driver_config {
              + enabled = false
            }

          + horizontal_pod_autoscaling {
              + disabled = false
            }

          + http_load_balancing {
              + disabled = false
            }

          + istio_config {
              + auth     = "AUTH_MUTUAL_TLS"
              + disabled = true
            }

          + kalm_config {
              + enabled = false
            }

          + kubernetes_dashboard {
              + disabled = (known after apply)
            }

          + network_policy_config {
              + disabled = false
            }
        }

      + authenticator_groups_config {
          + security_group = (known after apply)
        }

      + cluster_autoscaling {
          + autoscaling_profile = "BALANCED"
          + enabled             = false

          + auto_provisioning_defaults {
              + min_cpu_platform = (known after apply)
              + oauth_scopes     = (known after apply)
              + service_account  = (known after apply)
            }
        }

      + cluster_telemetry {
          + type = (known after apply)
        }

      + database_encryption {
          + state = "DECRYPTED"
        }

      + ip_allocation_policy {
          + cluster_ipv4_cidr_block       = (known after apply)
          + cluster_secondary_range_name  = (known after apply)
          + node_ipv4_cidr_block          = (known after apply)
          + services_ipv4_cidr_block      = (known after apply)
          + services_secondary_range_name = (known after apply)
          + subnetwork_name               = (known after apply)
        }

      + maintenance_policy {
          + daily_maintenance_window {
              + duration   = (known after apply)
              + start_time = "05:00"
            }
        }

      + master_auth {
          + client_certificate     = (known after apply)
          + client_key             = (sensitive value)
          + cluster_ca_certificate = (known after apply)

          + client_certificate_config {
              + issue_client_certificate = false
            }
        }

      + network_policy {
          + enabled  = true
          + provider = "CALICO"
        }

      + node_config {
          + boot_disk_kms_key = (known after apply)
          + disk_size_gb      = (known after apply)
          + disk_type         = (known after apply)
          + guest_accelerator = (known after apply)
          + image_type        = (known after apply)
          + labels            = (known after apply)
          + local_ssd_count   = (known after apply)
          + machine_type      = (known after apply)
          + metadata          = (known after apply)
          + min_cpu_platform  = (known after apply)
          + oauth_scopes      = (known after apply)
          + preemptible       = (known after apply)
          + service_account   = (known after apply)
          + tags              = (known after apply)
          + taint             = (known after apply)

          + sandbox_config {
              + sandbox_type = (known after apply)
            }

          + shielded_instance_config {
              + enable_integrity_monitoring = (known after apply)
              + enable_secure_boot          = (known after apply)
            }

          + workload_metadata_config {
              + node_metadata = (known after apply)
            }
        }

      + node_pool {
          + initial_node_count  = 0
          + instance_group_urls = (known after apply)
          + max_pods_per_node   = (known after apply)
          + name                = "default-pool"
          + name_prefix         = (known after apply)
          + node_count          = (known after apply)
          + node_locations      = (known after apply)
          + version             = (known after apply)

          + management {
              + auto_repair  = (known after apply)
              + auto_upgrade = (known after apply)
            }

          + node_config {
              + disk_size_gb      = (known after apply)
              + disk_type         = (known after apply)
              + guest_accelerator = (known after apply)
              + image_type        = (known after apply)
              + labels            = (known after apply)
              + local_ssd_count   = (known after apply)
              + machine_type      = (known after apply)
              + metadata          = (known after apply)
              + oauth_scopes      = (known after apply)
              + preemptible       = false
              + service_account   = (known after apply)
              + taint             = (known after apply)

              + shielded_instance_config {
                  + enable_integrity_monitoring = (known after apply)
                  + enable_secure_boot          = (known after apply)
                }

              + workload_metadata_config {
                  + node_metadata = "GKE_METADATA_SERVER"
                }
            }

          + upgrade_settings {
              + max_surge       = (known after apply)
              + max_unavailable = (known after apply)
            }
        }

      + pod_security_policy_config {
          + enabled = false
        }

      + release_channel {
          + channel = (known after apply)
        }

      + timeouts {
          + create = "45m"
          + delete = "45m"
          + update = "45m"
        }

      + vertical_pod_autoscaling {
          + enabled = false
        }

      + workload_identity_config {
          + identity_namespace = "kube-project-279210.svc.id.goog"
        }
    }

  # module.gke.google_container_node_pool.pools["wi-pool"] will be created
  + resource "google_container_node_pool" "pools" {
      + cluster             = "my-demo-cluster"
      + id                  = (known after apply)
      + initial_node_count  = 1
      + instance_group_urls = (known after apply)
      + location            = "europe-west2"
      + max_pods_per_node   = (known after apply)
      + name                = "wi-pool"
      + name_prefix         = (known after apply)
      + node_count          = (known after apply)
      + node_locations      = (known after apply)
      + project             = "kube-project-279210"
      + region              = (known after apply)
      + version             = (known after apply)
      + zone                = (known after apply)

      + autoscaling {
          + max_node_count = 2
          + min_node_count = 1
        }

      + management {
          + auto_repair  = true
          + auto_upgrade = true
        }

      + node_config {
          + disk_size_gb      = 100
          + disk_type         = "pd-standard"
          + guest_accelerator = []
          + image_type        = "COS"
          + labels            = {
              + "cluster_name" = "my-demo-cluster"
              + "node_pool"    = "wi-pool"
            }
          + local_ssd_count   = 0
          + machine_type      = "n1-standard-2"
          + metadata          = {
              + "cluster_name"             = "my-demo-cluster"
              + "disable-legacy-endpoints" = "true"
              + "node_pool"                = "wi-pool"
            }
          + oauth_scopes      = [
              + "https://www.googleapis.com/auth/cloud-platform",
            ]
          + preemptible       = false
          + service_account   = (known after apply)
          + tags              = [
              + "gke-my-demo-cluster",
              + "gke-my-demo-cluster-wi-pool",
            ]
          + taint             = (known after apply)

          + shielded_instance_config {
              + enable_integrity_monitoring = true
              + enable_secure_boot          = false
            }

          + workload_metadata_config {
              + node_metadata = "GKE_METADATA_SERVER"
            }
        }

      + timeouts {
          + create = "45m"
          + delete = "45m"
          + update = "45m"
        }

      + upgrade_settings {
          + max_surge       = 1
          + max_unavailable = 0
        }
    }

  # module.gke.google_project_iam_member.cluster_service_account-log_writer[0] will be created
  + resource "google_project_iam_member" "cluster_service_account-log_writer" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = (known after apply)
      + project = "kube-project-279210"
      + role    = "roles/logging.logWriter"
    }

  # module.gke.google_project_iam_member.cluster_service_account-metric_writer[0] will be created
  + resource "google_project_iam_member" "cluster_service_account-metric_writer" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = (known after apply)
      + project = "kube-project-279210"
      + role    = "roles/monitoring.metricWriter"
    }

  # module.gke.google_project_iam_member.cluster_service_account-monitoring_viewer[0] will be created
  + resource "google_project_iam_member" "cluster_service_account-monitoring_viewer" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = (known after apply)
      + project = "kube-project-279210"
      + role    = "roles/monitoring.viewer"
    }

  # module.gke.google_project_iam_member.cluster_service_account-resourceMetadata-writer[0] will be created
  + resource "google_project_iam_member" "cluster_service_account-resourceMetadata-writer" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = (known after apply)
      + project = "kube-project-279210"
      + role    = "roles/stackdriver.resourceMetadata.writer"
    }

  # module.gke.google_service_account.cluster_service_account[0] will be created
  + resource "google_service_account" "cluster_service_account" {
      + account_id   = (known after apply)
      + display_name = "Terraform-managed service account for cluster my-demo-cluster"
      + email        = (known after apply)
      + id           = (known after apply)
      + name         = (known after apply)
      + project      = "kube-project-279210"
      + unique_id    = (known after apply)
    }

  # module.gke.random_shuffle.available_zones will be created
  + resource "random_shuffle" "available_zones" {
      + id           = (known after apply)
      + input        = [
          + "europe-west2-a",
          + "europe-west2-b",
          + "europe-west2-c",
        ]
      + result       = (known after apply)
      + result_count = 3
    }

  # module.gke.random_string.cluster_service_account_suffix will be created
  + resource "random_string" "cluster_service_account_suffix" {
      + id          = (known after apply)
      + length      = 4
      + lower       = true
      + min_lower   = 0
      + min_numeric = 0
      + min_special = 0
      + min_upper   = 0
      + number      = true
      + result      = (known after apply)
      + special     = false
      + upper       = false
    }

  # module.workload_identity.google_service_account.cluster_service_account will be created
  + resource "google_service_account" "cluster_service_account" {
      + account_id   = "iden-my-demo-cluster"
      + display_name = "GCP SA bound to K8S SA iden-my-demo-cluster"
      + email        = (known after apply)
      + id           = (known after apply)
      + name         = (known after apply)
      + project      = "kube-project-279210"
      + unique_id    = (known after apply)
    }

  # module.workload_identity.google_service_account_iam_member.main will be created
  + resource "google_service_account_iam_member" "main" {
      + etag               = (known after apply)
      + id                 = (known after apply)
      + member             = "serviceAccount:kube-project-279210.svc.id.goog[default/iden-my-demo-cluster]"
      + role               = "roles/iam.workloadIdentityUser"
      + service_account_id = (known after apply)
    }

  # module.workload_identity.kubernetes_service_account.main[0] will be created
  + resource "kubernetes_service_account" "main" {
      + automount_service_account_token = false
      + default_secret_name             = (known after apply)
      + id                              = (known after apply)

      + metadata {
          + annotations      = (known after apply)
          + generation       = (known after apply)
          + name             = "iden-my-demo-cluster"
          + namespace        = "default"
          + resource_version = (known after apply)
          + self_link        = (known after apply)
          + uid              = (known after apply)
        }
    }

  # module.gke.module.gcloud_delete_default_kube_dns_configmap.null_resource.module_depends_on[0] will be created
  + resource "null_resource" "module_depends_on" {
      + id       = (known after apply)
      + triggers = {
          + "value" = "3"
        }
    }

  # module.gke.module.gcloud_delete_default_kube_dns_configmap.random_id.cache will be created
  + resource "random_id" "cache" {
      + b64         = (known after apply)
      + b64_std     = (known after apply)
      + b64_url     = (known after apply)
      + byte_length = 4
      + dec         = (known after apply)
      + hex         = (known after apply)
      + id          = (known after apply)
    }

  # module.gke.module.gcloud_wait_for_cluster.null_resource.module_depends_on[0] will be created
  + resource "null_resource" "module_depends_on" {
      + id       = (known after apply)
      + triggers = {
          + "value" = "2"
        }
    }

  # module.gke.module.gcloud_wait_for_cluster.random_id.cache will be created
  + resource "random_id" "cache" {
      + b64         = (known after apply)
      + b64_std     = (known after apply)
      + b64_url     = (known after apply)
      + byte_length = 4
      + dec         = (known after apply)
      + hex         = (known after apply)
      + id          = (known after apply)
    }

  # module.workload_identity.module.annotate-sa.random_id.cache will be created
  + resource "random_id" "cache" {
      + b64         = (known after apply)
      + b64_std     = (known after apply)
      + b64_url     = (known after apply)
      + byte_length = 4
      + dec         = (known after apply)
      + hex         = (known after apply)
      + id          = (known after apply)
    }

Plan: 17 to add, 0 to change, 0 to destroy.

------------------------------------------------------------------------

This plan was saved to: wi.plan

To perform exactly these actions, run the following command to apply:
    terraform apply "wi.plan"


Thulasi@DESKTOP-63GEKPP MINGW64 ~/Desktop/GCP/terraform-gke-workload/workload-identity
$ terraform apply "wi.plan"
module.workload_identity.module.annotate-sa.random_id.cache: Creating...
module.gke.module.gcloud_delete_default_kube_dns_configmap.random_id.cache: Creating...
module.gke.module.gcloud_wait_for_cluster.random_id.cache: Creating...
module.gke.random_string.cluster_service_account_suffix: Creating...
module.workload_identity.module.annotate-sa.random_id.cache: Creation complete after 0s [id=7Zd1tw]
module.gke.module.gcloud_wait_for_cluster.random_id.cache: Creation complete after 0s [id=CbIVPw]
module.gke.module.gcloud_delete_default_kube_dns_configmap.random_id.cache: Creation complete after 0s [id=9vtM7w]
module.gke.random_string.cluster_service_account_suffix: Creation complete after 0s [id=onav]
module.gke.random_shuffle.available_zones: Creating...
module.gke.google_service_account.cluster_service_account[0]: Creating...
module.gke.random_shuffle.available_zones: Creation complete after 0s [id=-]
module.gke.google_service_account.cluster_service_account[0]: Creation complete after 5s [id=projects/kube-project-279210/serviceAccounts/tf-gke-my-demo-cluster-onav@kube-project-279210.iam.gserviceaccount.com]
module.gke.google_project_iam_member.cluster_service_account-log_writer[0]: Creating...
module.gke.google_container_cluster.primary: Creating...
module.gke.google_project_iam_member.cluster_service_account-log_writer[0]: Still creating... [10s elapsed]
module.gke.google_container_cluster.primary: Still creating... [10s elapsed]
module.gke.google_project_iam_member.cluster_service_account-log_writer[0]: Creation complete after 15s [id=kube-project-279210/roles/logging.logWriter/serviceaccount:tf-gke-my-demo-cluster-onav@kube-project-279210.iam.gserviceaccount.com]
module.gke.google_project_iam_member.cluster_service_account-metric_writer[0]: Creating...
module.gke.google_container_cluster.primary: Still creating... [20s elapsed]
module.gke.google_project_iam_member.cluster_service_account-metric_writer[0]: Still creating... [10s elapsed]
module.gke.google_container_cluster.primary: Still creating... [30s elapsed]
module.gke.google_project_iam_member.cluster_service_account-metric_writer[0]: Creation complete after 15s [id=kube-project-279210/roles/monitoring.metricWriter/serviceaccount:tf-gke-my-demo-cluster-onav@kube-project-279210.iam.gserviceaccount.com]
module.gke.google_project_iam_member.cluster_service_account-monitoring_viewer[0]: Creating...
module.gke.google_container_cluster.primary: Still creating... [40s elapsed]
module.gke.google_project_iam_member.cluster_service_account-monitoring_viewer[0]: Still creating... [10s elapsed]
module.gke.google_project_iam_member.cluster_service_account-monitoring_viewer[0]: Creation complete after 15s [id=kube-project-279210/roles/monitoring.viewer/serviceaccount:tf-gke-my-demo-cluster-onav@kube-project-279210.iam.gserviceaccount.com]
module.gke.google_project_iam_member.cluster_service_account-resourceMetadata-writer[0]: Creating...
module.gke.google_container_cluster.primary: Still creating... [50s elapsed]
module.gke.google_project_iam_member.cluster_service_account-resourceMetadata-writer[0]: Still creating... [10s elapsed]
module.gke.google_project_iam_member.cluster_service_account-resourceMetadata-writer[0]: Creation complete after 14s [id=kube-project-279210/roles/stackdriver.resourceMetadata.writer/serviceaccount:tf-gke-my-demo-cluster-onav@kube-project-279210.iam.gserviceaccount.com]
module.gke.google_container_cluster.primary: Still creating... [1m0s elapsed]
module.gke.google_container_cluster.primary: Still creating... [1m10s elapsed]
module.gke.google_container_cluster.primary: Still creating... [1m20s elapsed]
module.gke.google_container_cluster.primary: Still creating... [1m30s elapsed]
module.gke.google_container_cluster.primary: Still creating... [1m40s elapsed]
module.gke.google_container_cluster.primary: Still creating... [1m50s elapsed]
module.gke.google_container_cluster.primary: Still creating... [2m0s elapsed]
module.gke.google_container_cluster.primary: Still creating... [2m10s elapsed]
module.gke.google_container_cluster.primary: Still creating... [2m20s elapsed]
module.gke.google_container_cluster.primary: Still creating... [2m30s elapsed]
module.gke.google_container_cluster.primary: Still creating... [2m40s elapsed]
module.gke.google_container_cluster.primary: Still creating... [2m50s elapsed]
module.gke.google_container_cluster.primary: Still creating... [3m0s elapsed]
module.gke.google_container_cluster.primary: Still creating... [3m10s elapsed]
module.gke.google_container_cluster.primary: Creation complete after 3m12s [id=projects/kube-project-279210/locations/europe-west2/clusters/my-demo-cluster]
module.gke.google_container_node_pool.pools["wi-pool"]: Creating...
module.workload_identity.google_service_account.cluster_service_account: Creating...
module.workload_identity.google_service_account.cluster_service_account: Creation complete after 5s [id=projects/kube-project-279210/serviceAccounts/iden-my-demo-cluster@kube-project-279210.iam.gserviceaccount.com]
module.gke.google_container_node_pool.pools["wi-pool"]: Still creating... [10s elapsed]
module.gke.google_container_node_pool.pools["wi-pool"]: Still creating... [20s elapsed]
module.gke.google_container_node_pool.pools["wi-pool"]: Still creating... [30s elapsed]
module.gke.google_container_node_pool.pools["wi-pool"]: Still creating... [40s elapsed]
module.gke.google_container_node_pool.pools["wi-pool"]: Still creating... [50s elapsed]
module.gke.google_container_node_pool.pools["wi-pool"]: Still creating... [1m0s elapsed]
module.gke.google_container_node_pool.pools["wi-pool"]: Still creating... [1m10s elapsed]
module.gke.google_container_node_pool.pools["wi-pool"]: Still creating... [1m20s elapsed]
module.gke.google_container_node_pool.pools["wi-pool"]: Still creating... [1m30s elapsed]
module.gke.google_container_node_pool.pools["wi-pool"]: Creation complete after 1m32s [id=projects/kube-project-279210/locations/europe-west2/clusters/my-demo-cluster/nodePools/wi-pool]
module.gke.module.gcloud_delete_default_kube_dns_configmap.null_resource.module_depends_on[0]: Creating...
module.gke.module.gcloud_wait_for_cluster.null_resource.module_depends_on[0]: Creating...
module.gke.module.gcloud_wait_for_cluster.null_resource.module_depends_on[0]: Creation complete after 0s [id=7379816937803121538]
module.gke.module.gcloud_delete_default_kube_dns_configmap.null_resource.module_depends_on[0]: Creation complete after 0s [id=1902786208052211010]
module.workload_identity.kubernetes_service_account.main[0]: Creating...
module.workload_identity.kubernetes_service_account.main[0]: Creation complete after 3s [id=default/iden-my-demo-cluster]
module.workload_identity.google_service_account_iam_member.main: Creating...
module.workload_identity.google_service_account_iam_member.main: Still creating... [10s elapsed]
module.workload_identity.google_service_account_iam_member.main: Creation complete after 12s [id=projects/kube-project-279210/serviceAccounts/iden-my-demo-cluster@kube-project-279210.iam.gserviceaccount.com/roles/iam.workloadIdentityUser/serviceaccount:kube-project-279210.svc.id.goog[default/iden-my-demo-cluster]]

Apply complete! Resources: 17 added, 0 changed, 0 destroyed.

The state of your infrastructure has been saved to the path
below. This state is required to modify and destroy your
infrastructure, so keep it safe. To inspect the complete state
use the `terraform show` command.

State path: terraform.tfstate

Outputs:

ca_certificate = LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDekNDQWZPZ0F3SUJBZ0lRVGdhUFh0K1B5U0JJWFMvd0cwQkJnVEFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlRd01EQTVNRGszTkMwME9XRmtMVFF3TTJRdE9XSXlNeTFrWkRRMU1HUXhZak0xWWpFdwpIaGNOTWpBd05qSTRNVFEwTURJNFdoY05NalV3TmpJM01UVTBNREk0V2pBdk1TMHdLd1lEVlFRREV5UXdNREE1Ck1EazNOQzAwT1dGa0xUUXdNMlF0T1dJeU15MWtaRFExTUdReFlqTTFZakV3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNQbmN2YjdSdGhlYXNvR0FxblZuOHlwd2NLMU5UY1dnVjhwYm0yakYzWApvOS8xbWcvZzViOGxneGFuVWJnVFpVdXF3QzI0WFNnVlpqNUFkUzFmak51RmtGbEVtbUd2YTlMSnVmTTRUWTMwCms5QzhyVUU4Qm1yOG1GS3A0OXc4Nk5IR3RsYlhvSkJpMWRiTWZVckNvelJtWlRjS1d6a2UzMWFxK2xLM1BMS2wKL2plQnVuUWNSY0ZCb2x2cE1Va0Z3SkhnMEc2eEYzL1ErR2JWc1FKVkJaYkhoaEZ0SmI4TUJncWNnTXJ4Zkd4RgowRWNUZEoxY3Ztc1BWWUFXVUdVZUkxeEtnNmxIYWcvd0FPM1FibTZpOVY2WEtnbjhjQ0ZHWFpQN2hLSUY5Q25ZCnNoYzhldVlodWc1amZTSW1yTGpKSENKaVgvK2IyNktzb1ZDU2ZtbEVlcWhOQWdNQkFBR2pJekFoTUE0R0ExVWQKRHdFQi93UUVBd0lDQkRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDRQpIdm5MM3VXZTFtalhDZG5paG1yN1dBelRmUDcrNWxhd2dPNHF3U01nZ1FCMkNBMGVCNnRIeU9RdW5rMGlWNjM5CitBRUc3YVdHbjA3eHdxWWJmc2x4Q09TakdMZTdKMjhKc0dzMmh2ME9vdWg0dHhVNFFiZjhSVFpRam9DZE51U04KMlR6YWRTTUhhNW0xdFFWbTNjSld1UUV0YWx0UW4rUVRTLzJ4aXJ3WlVaUk9rejBHalZEaHJkc1E2VWI0eEw3RAo4OUFtMFE0dFh0UksrUTVpZ2hKeFVCSDN4UnVGQXorTmwvMVhEY0VMS2Fvc2g1c0pjd1Z3UklSNThCcm1RU2JzClVrMnJoTEVsbWY3emE2NkptZ0hLb1IxMHVEcDdNZlNSZmMxSk8yT1QwUHlaQTgzMldrYTdibk11eVNSV0VaM2YKUk1iVnNNaVozeWVKMnc5b0YrbjMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
client_token = <sensitive>
cluster_name = my-demo-cluster
k8s_service_account_email = iden-my-demo-cluster@kube-project-279210.iam.gserviceaccount.com
k8s_service_account_name = serviceAccount:kube-project-279210.svc.id.goog[default/iden-my-demo-cluster]
kubernetes_endpoint = <sensitive>
location = europe-west2
project_id = kube-project-279210
region = europe-west2
service_account = tf-gke-my-demo-cluster-onav@kube-project-279210.iam.gserviceaccount.com

Thulasi@DESKTOP-63GEKPP MINGW64 ~/Desktop/GCP/terraform-gke-workload/workload-identity
$

Thulasi@DESKTOP-63GEKPP MINGW64 ~/Desktop/GCP/terraform-gke-workload/workload-identity
$
